export { matchers } from './matchers.js';

export const nodes = [
	() => import('./nodes/0'),
	() => import('./nodes/1'),
	() => import('./nodes/2'),
	() => import('./nodes/3'),
	() => import('./nodes/4'),
	() => import('./nodes/5'),
	() => import('./nodes/6'),
	() => import('./nodes/7'),
	() => import('./nodes/8'),
	() => import('./nodes/9'),
	() => import('./nodes/10'),
	() => import('./nodes/11'),
	() => import('./nodes/12'),
	() => import('./nodes/13'),
	() => import('./nodes/14'),
	() => import('./nodes/15'),
	() => import('./nodes/16'),
	() => import('./nodes/17'),
	() => import('./nodes/18'),
	() => import('./nodes/19'),
	() => import('./nodes/20'),
	() => import('./nodes/21'),
	() => import('./nodes/22'),
	() => import('./nodes/23'),
	() => import('./nodes/24'),
	() => import('./nodes/25'),
	() => import('./nodes/26'),
	() => import('./nodes/27'),
	() => import('./nodes/28'),
	() => import('./nodes/29'),
	() => import('./nodes/30'),
	() => import('./nodes/31'),
	() => import('./nodes/32'),
	() => import('./nodes/33'),
	() => import('./nodes/34'),
	() => import('./nodes/35'),
	() => import('./nodes/36'),
	() => import('./nodes/37'),
	() => import('./nodes/38'),
	() => import('./nodes/39'),
	() => import('./nodes/40'),
	() => import('./nodes/41'),
	() => import('./nodes/42'),
	() => import('./nodes/43'),
	() => import('./nodes/44'),
	() => import('./nodes/45'),
	() => import('./nodes/46'),
	() => import('./nodes/47'),
	() => import('./nodes/48'),
	() => import('./nodes/49'),
	() => import('./nodes/50'),
	() => import('./nodes/51'),
	() => import('./nodes/52'),
	() => import('./nodes/53'),
	() => import('./nodes/54'),
	() => import('./nodes/55'),
	() => import('./nodes/56'),
	() => import('./nodes/57'),
	() => import('./nodes/58'),
	() => import('./nodes/59')
];

export const server_loads = [];

export const dictionary = {
		"/": [11],
		"/404": [12],
		"/account/forgot-password": [13],
		"/account/institution/details": [14],
		"/account/institution/login": [15],
		"/account/institution/signup": [16],
		"/account/signup": [17],
		"/account/user/login": [18],
		"/account/user/signup": [19],
		"/account/verify-code": [21],
		"/account/verify": [20],
		"/admin/competitions": [22,[2]],
		"/admin/competitions/[competition_name]/overview": [23,[2,3]],
		"/admin/competitions/[competition_name]/players": [24,[2,3]],
		"/auth/google": [25],
		"/challenge": [26,[5]],
		"/challenge/player": [27,[5]],
		"/challenge/result": [28,[5]],
		"/challenge/selection": [29,[5]],
		"/challenge/vsscreen": [30,[5,6]],
		"/competitions": [31,[7]],
		"/competitions/[competition_name]": [32,[7,8]],
		"/competitions/[competition_name]/change-grade": [33,[7,8]],
		"/competitions/[competition_name]/friends": [34,[7,8]],
		"/competitions/[competition_name]/home": [35,[7,8]],
		"/competitions/[competition_name]/leaderboard": [36,[7,8]],
		"/competitions/[competition_name]/lessons": [37,[7,8]],
		"/competitions/[competition_name]/lessons/listing": [38,[7,8]],
		"/competitions/[competition_name]/my-games": [39,[7,8]],
		"/competitions/[competition_name]/my-subscription": [40,[7,8]],
		"/competitions/[competition_name]/profile": [41,[7,8]],
		"/competitions/[competition_name]/profile/edit": [42,[7,8]],
		"/competitions/[competition_name]/results": [43,[7,8]],
		"/competitions/[competition_name]/rewards": [44,[7,8]],
		"/competitions/[competition_name]/rules": [45,[7,8]],
		"/competitions/[competition_name]/stats": [46,[7,8]],
		"/contactus": [47],
		"/gclc-result": [48],
		"/green-star-school": [49],
		"/home": [50],
		"/payment": [51,[9]],
		"/payment/bank": [52,[9]],
		"/payment/status": [53,[9]],
		"/privacy-policy": [54],
		"/profile": [55,[10]],
		"/profile/edit": [56,[10]],
		"/program/glc": [57],
		"/program/sitarey": [58],
		"/settings/change-grade": [59]
	};

export const hooks = {
	handleError: (({ error }) => { console.error(error) }),
	
	reroute: (() => {}),
	transport: {}
};

export const decoders = Object.fromEntries(Object.entries(hooks.transport).map(([k, v]) => [k, v.decode]));

export const hash = false;

export const decode = (type, value) => decoders[type](value);

export { default as root } from '../root.js';