const a={FloatFix(e,t=!1){if(isNaN(e)||e==="")return 0;let r=parseFloat(e);return r<0&&t&&(r=0),r>100&&t&&(r=100),this.SetZeroError(r)},ZeroPad(e){return e<10?`0${e}`:e},SetZeroError(e){const t=`${parseFloat(e).toFixed(2)}`;return t.split(".").length===1||parseInt(t.split(".")[1],10)===0?`${t.split(".")[0]}`:t},AbbreviatedNumber(e,t){const r=[{value:1,symbol:""},{value:1e3,symbol:"k"},{value:1e6,symbol:"M"},{value:1e9,symbol:"B"},{value:1e12,symbol:"T"},{value:1e15,symbol:"P"},{value:1e18,symbol:"E"}],l=/\.0+$|(\.[0-9]*[1-9])0+$/;let o;for(o=r.length-1;o>0&&!(e>=r[o].value);o--);return(e/r[o].value).toFixed(t).replace(l,"$1")+r[o].symbol},ToCommaSeparated(e,t){if(t==="urdu")return e.toLocaleString("en-IN");const r=e.toLocaleString();return r.length===1?`0${r}`:r},ToCommaSeparatedWithoutZero(e,t){if(t==="urdu")return e.toLocaleString("en-IN");const r=e.toLocaleString();return r.length===1?`${r}`||0:r||0},AtLeastZero(e){return typeof e>"u"?0:e}};export{a as n};
