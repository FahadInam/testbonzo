import { getText } from "../stores/language.store";

export const API_DEFINITIONS = {
  GET_USER: {
    method: "GET",
    endpoint: "user",
    requiredParams: ["userId"],
    cache: true,
    secure: true, // Requires authentication
    loader: true, // Show loader for this request
  },
  LOGIN_USER: {
    method: "POST",
    endpoint: "login",
    requiredParams: ["username", "password"],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-1": await getText("invalid_username"),
    },
  },
  SIGNUP_USER: {
    method: "POST",
    endpoint: "signup",
    requiredParams: ["username", "password", "profile_picture", "role", "t_token"],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-1": await getText("username_exists"),
      "-10": await getText("email_exists"),
    },
  },
  COMPETITIONS: {
    method: "POST",
    endpoint: "competitions",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: false,
  },
  INSTANCE_CONFIG: {
    method: "POST",
    endpoint: "instance/config",
    requiredParams: ["domain_name"],
    cache: true,
    secure: false,
    loader: true,
  },
  COMPETITION_DETAILS: {
    method: "POST",
    endpoint: "competition/details",
    requiredParams: ["competition_id"],
    cache: false,
    secure: true,
    loader: true,
  },
  UPDATE_TIMEZONE: {
    method: "POST",
    endpoint: "users/timezone/update",
    requiredParams: ["timezone"],
    cache: false,
    secure: true,
    loader: false,
  },
  LESSON_RECOMMENDATION: {
    method: "POST",
    endpoint: "user/lesson/recommendation",
    requiredParams: ["competition_id", "grade"],
    cache: false,
    secure: true,
    loader: false,
  },
  NOTIFICATIONS: {
    method: "POST",
    endpoint: "notifications",
    requiredParams: ["competition_id", "grade_id"],
    cache: false,
    secure: true,
    loader: false,
  },
  SETTINGS_UPDATE: {
    method: "POST",
    endpoint: "user/settings/update",
    requiredParams: ["competition_id", "grade", "school_id", "friend_id", "points"],
    cache: false,
    secure: true,
    loader: false,
  },
  TOKEN_REFRESH: {
    method: "POST",
    endpoint: "token/refresh",
    requiredParams: [],
    cache: false,
    secure: false,
    loader: false,
  },
  LEARNER_LEADERBOARD: {
    method: "POST",
    endpoint: "competition/users/ranking",
    requiredParams: ["competition_id", "grade", "time_type", "is_school_based"],
    cache: false,
    secure: true,
    loader: false,
  },
  SCHOOL_LEADERBOARD: {
    method: "POST",
    endpoint: "competition/users/ranking",
    requiredParams: ["competition_id", "grade", "time_type", "is_school_based"],
    cache: false,
    secure: true,
    loader: false,
  },
  COMPETITION_ACTIVITIES: {
    method: "POST",
    endpoint: "competition/activities",
    requiredParams: ["competition_id", "grade"],
    cache: false,
    secure: true,
    loader: false,
  },
  FRIENDS: {
    method: "POST",
    endpoint: "friends",
    requiredParams: ["competition_id", "grade", "subject"],
    cache: false,
    secure: true,
    loader: false,
  },
  SEARCH_FRIENDS: {
    method: "POST",
    endpoint: "friends/search",
    requiredParams: ["competition_id", "grade", "username"],
    cache: false,
    secure: true,
    loader: false,
  },
  USER_STATS: {
    method: "POST",
    endpoint: "user/stats",
    requiredParams: ["competition_id", "grade"],
    cache: false,
    secure: true,
    loader: false,
  },
  SOCIAL_LOGIN: {
    method: "POST",
    endpoint: "socialLogin",
    requiredParams: ["action_type", "email", "login_type", "token", "role"],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-1": await getText("username_not_found"),
    },
  },
  REWARDS: {
    method: "POST",
    endpoint: "rewards",
    requiredParams: ["competition_id", "grade"],
    cache: false,
    secure: true,
    loader: false,
  },
  PAYMENT_STATUS: {
    method: "POST",
    endpoint: "user/payment/status",
    requiredParams: ["competition_id", "grade", "inquiry_type"],
    cache: false,
    secure: true,
    loader: false,
  },
  CERTIFICATE_NAME_UPDATE: {
    method: "POST",
    endpoint: "user/certificate/data",
    requiredParams: ["competition_id", "grade", "full_name"],
    cache: false,
    secure: true,
    loader: false,
  },
  USER_LESSONS: {
    method: "POST",
    endpoint: "user/lessons",
    requiredParams: ["competition_id", "grade"],
    cache: false,
    secure: true,
    loader: false,
  },
  GOOGLE_USER: {
    method: "POST",
    endpoint: "userinfo",
    cache: false,
    secure: false,
    baseURL: "https://www.googleapis.com/oauth2/v3/",
    loader: false,
  },
  CHALLENGE_FRIENDS: {
    method: "POST",
    endpoint: "friends",
    requiredParams: ["competition_id", "grade", "subject"],
    cache: false,
    secure: true,
    loader: false,
  },
  CHALLENGE_START: {
    method: "POST",
    endpoint: "challenge/start",
    requiredParams: ["competition_id", "grade", "subject"],
    cache: false,
    secure: true,
    loader: false,
    errorCodes: {
      "-2": await getText("invitation_already_sent"),
    },
  },
  CHALLENGE_PLAY: {
    method: "POST",
    endpoint: "challenge/play",
    requiredParams: ["competition_id", "grade", "subject"],
    cache: false,
    secure: true,
    loader: false,
  },
  CHALLENGE_SAVE: {
    method: "POST",
    endpoint: "challenge/save",
    requiredParams: ["competition_id", "grade"],
    cache: false,
    secure: true,
    loader: false,
  },
  CHALLENGE_INVITATION_STATUS: {
    method: "POST",
    endpoint: "friend/invitation",
    requiredParams: ["competition_id", "row_id", "match_id", "status"],
    cache: false,
    secure: true,
    loader: false,
  },
  ADD_VOUCHER: {
    method: "POST",
    endpoint: "users/secretcode",
    requiredParams: ["secret_code"],
    cache: false,
    secure: true,
    loader: false,
    errorCodes: {
      "-2": await getText("invalid_voucher"),
      "-3": await getText("voucher_already_used"),
    },
  },
  ADD_GCLC_VOUCHER: {
    method: "POST",
    endpoint: "add/competition/secretcode",
    requiredParams: ["secret_code", "competition_id"],
    cache: false,
    secure: true,
    loader: false,
    errorCodes: {
      "-2": await getText("invalid_voucher"),
      "-3": await getText("voucher_already_used"),
      "-4": await getText("already_enrolled_with_school"),
    },
  },
  FORGOT_PASSWORD: {
    method: "POST",
    endpoint: "password/forgot",
    requiredParams: ["email"],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-1": await getText("email_not_found"),
    },
  },
  RESET_PASSWORD: {
    method: "POST",
    endpoint: "password/recover",
    requiredParams: ["change_code", "password", "user_id"],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-2": await getText("invalid_or_expire_code"),
    },
  },
  PAYMENT_SUBSCRIPTIONS: {
    method: "POST",
    endpoint: "competition/subscriptions",
    requiredParams: ["competition_id"],
    cache: false,
    secure: true,
    loader: true,
  },
  GET_USER_NOTIFICATIONS: {
    method: "POST",
    endpoint: "notifications",
    requiredParams: ["competition_id", "grade"],
    cache: false,
    secure: true,
    loader: false,
  },
  UPDATE_USER_NOTIFICATIONS: {
    method: "POST",
    endpoint: "notifications/read",
    requiredParams: ["competition_id"],
    cache: false,
    secure: true,
    loader: false,
  },
  DELETE_USER_NOTIFICATIONS: {
    method: "POST",
    endpoint: "notifications/delete",
    requiredParams: ["competition_id"],
    cache: false,
    secure: true,
    loader: false,
  },
  DEMO_COMPETITIONS: {
    method: "POST",
    endpoint: "demo/competitions",
    requiredParams: [],
    cache: false,
    secure: false,
    loader: false,
  },
  USER_PROFILE: {
    method: "POST",
    endpoint: "users/profile",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: false,
  },
  SAVE_PROFILE: {
    method: "POST",
    endpoint: "users/profile/save",
    requiredParams: [
      "competition_id",
      "city",
      "dob",
      "gender",
      "country",
      "phone_number",
      "profile_picture",
      "school_id",
    ],
    cache: false,
    secure: true,
    loader: false,
  },
  PRINCIPAL_PAYMENT_SUBSCRIPTIONS: {
    method: "POST",
    endpoint: "institution/subscriptions",
    requiredParams: ["competition_id"],
    cache: false,
    secure: true,
    loader: true,
  },
  INSTITUTION_COMPETITIONS: {
    method: "POST",
    endpoint: "institution/competitions",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: false,
    errorCodes: {
      "-1": await getText("institution_not_subscribed"),
    },
  },
  INSTITUTION_DETAILS: {
    method: "POST",
    endpoint: "principal/signup/set/institutional/info",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: false,
    errorCodes: {
      "-2": await getText("institute_already_exists"),
    },
  },
  INSTITUTION_COMPETITION_SUMMARY: {
    method: "POST",
    endpoint: "competition/summary",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: false,
  },
  INSTITUTION_COMPETITION_REPORT: {
    method: "POST",
    endpoint: "competition/lessons/report",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: false,
  },
  INSTITUTION_COMPETITION_PERFORMANCE: {
    method: "POST",
    endpoint: "competition/performance/summary",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: false,
  },
  INSTITUTION_GAMES_REPORT: {
    method: "POST",
    endpoint: "competition/games/report",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: false,
  },
  INSTITUTION_USERS_RANKING: {
    method: "POST",
    endpoint: "competition/users/ranking",
    requiredParams: ["competition_id", "grade", "time_type", "is_school_based"],
    cache: false,
    secure: true,
    loader: false,
  },
  INSTITUTION_SCHOOLS_RANKING: {
    method: "POST",
    endpoint: "competition/schools/ranking",
    requiredParams: ["competition_id", "grade", "time_type", "is_school_based"],
    cache: false,
    secure: true,
    loader: false,
  },
  INSTITUTION_LESSONS_REPORT: {
    method: "POST",
    endpoint: "competition/lessons/report",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: false,
  },
  BANK_TRANSFER: {
    method: "POST",
    endpoint: "payment/banktransfer/orderrequest",
    cache: false,
    secure: false,
    baseURL: "https://devlearningapi.knowledgeplatform.com/api/",
    loader: true,
  },
  EMAIL_SIGNUP: {
    method: "POST",
    endpoint: "user/signup/request/add",
    requiredParams: ["email"],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-10": await getText("email_already_exists"),
    },
  },
  MY_GAMES: {
    method: "POST",
    endpoint: "user/mygames",
    requiredParams: ["competition_id", "grade", "page"],
    cache: false,
    secure: true,
    loader: false,
  },
  EMAIL_SIGNUP_VERIFICATION: {
    method: "POST",
    endpoint: "user/signup/request/verify",
    requiredParams: [],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-2": await getText("verification_link_expired"),
    },
  },
  OTP_SIGNUP: {
    method: "POST",
    endpoint: "user/otp/sms/send",
    requiredParams: [],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-10": await getText("number_already_exists"),
    },
  },
  OTP_RECOVER_MOBILE: {
    method: "POST",
    endpoint: "password/recovermobile",
    requiredParams: [],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-10": await getText("number_already_exists"),
    },
  },
  OTP_VERIFY: {
    method: "POST",
    endpoint: "user/otp/verify",
    requiredParams: [],
    cache: false,
    secure: false,
    loader: true,
    errorCodes: {
      "-2": await getText("invalid_otp"),
    },
  },
  PROCESS_DPO_PAYMENT: {
    method: "POST",
    endpoint: "payment/dpo/transaction/create",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: true,
    errorCodes: {
      1: await getText("invalid_payment_link"),
    },
  },
  VERIFY_DPO_PAYMENT: {
    method: "POST",
    endpoint: "payment/dpo/transaction/verify",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: true,
    errorCodes: {
      1: await getText("invalid_payment_link"),
    },
  },
  SAFARICOM_PAYMENT: {
    method: "POST",
    endpoint: "payment/safaricom/transaction/create",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: true,
  },
  VERIFY_SAFARICOM_PAYMENT: {
    method: "POST",
    endpoint: "payment/safaricom/transaction/details",
    requiredParams: [],
    cache: false,
    secure: true,
  },
  SUBSCRIPTION_DETAILS: {
    method: "POST",
    endpoint: "user/subscription/details",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: true,
  },
  CANCEL_SUBSCRIPTION: {
    method: "POST",
    endpoint: "payment/dpo/subscription/cancel",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: true,
  },
  GET_CERTIFICATES: {
    method: "POST",
    endpoint: "user/certificate",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: true,
  },
  GET_PROFILE_STATS: {
    method: "POST",
    endpoint: "user/competitions/stats",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: true,
  },
  SET_GRADE_POINTS: {
    method: "POST",
    endpoint: "grade/point/set",
    requiredParams: [],
    cache: false,
    secure: true,
    loader: true,
  },
};
