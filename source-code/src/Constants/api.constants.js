export const API_ERRORS = {
  UNKNOWN: 'UNKNOWN',
  NO_INTERNET: 'NO_INTERNET',
  SYSTEM_ERROR: 'SYSTEM_ERROR',
  TIME_OUT: 'TIME_OUT',
  CANCELLED: 'CANCELLED',
  UNAUTHORIZED: 'UNAUTHORIZED',
  NETWORK_ERROR: 'NETWORK_ERROR',
};

export const API_CALLS = {
  SignUp: {
    api: 'signup',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  SignUpRequest: {
    api: 'user/signup/request/add',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  SignUpVerify: {
    api: 'user/signup/request/verify',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  Login: {
    api: 'login',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  RefreshToken: {
    api: 'token/refresh',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 0,
  },
  LoginExternal: {
    api: 'login/external',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  Logout: {
    api: 'logout',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  ForgotPassword: {
    api: 'password/forgot',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    //from: 1,
    from: 0,
    priority: 1,
  },
  ResetPassword: {
    api: 'password/recover',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    //from: 1,
    from: 0,
    priority: 1,
  },
  OTPSend: {
    api: 'user/otp/send',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    //from: 1,
    from: 0,
    priority: 1,
  },
  OTPVerify: {
    api: 'user/otp/verify',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    //from: 1,
    from: 0,
    priority: 1,
  },
  UpdateTime: {
    api: 'users/timezone/update',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  RecoverPassword: {
    api: 'password/recovermobile',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  OTPSignup: {
    api: 'signupmobile',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    //from: 1,
    from: 0,
    priority: 1,
  },
  OTPSendForgotPassword: {
    api: 'user/fpotp/send',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    //from: 1,
    from: 0,
    priority: 1,
  },
  OTPRecoverPassword: {
    api: 'password/recovermobile',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    //from: 1,
    from: 0,
    priority: 1,
  },
  SaveProfile: {
    // api: 'saveProfile',
    api: 'users/profile/save',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  GetProfile: {
    // api: 'getProfile',
    api: 'users/profile',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetDemoCompetitions: {
    api: 'demo/competitions',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetAllCompetitions: {
    api: 'competitions',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetFtpCompetitions: {
    api: 'competitions',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetCompetitionsActivities: {
    api: 'competition/activities',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetCompetitionsFriends: {
    // api: 'getFriends',
    api: 'friends',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetCompetitionsFriendsBlocking: {
    //api: 'getFriends',
    api: 'friends/block',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetCompetitionsLeaderboard: {
    api: 'competition/users/ranking',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetCompetitionsRewards: {
    api: 'rewards',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetCompetitionsLessons: {
    //api: 'getLessons',
    api: 'user/lessons',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetCompetitionsGames: {
    api: 'user/mygames',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  StartChallenge: {
    // api: 'startChallenge',
    api: 'challenge/start',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  PlayChallenge: {
    api: 'challenge/play',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  SaveChallenge: {
    api: 'challenge/save',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  SetInvitationStatus: {
    api: 'friend/invitation',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  SearchUser: {
    //api: 'searchUsers',
    api: 'friends/search',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  ClaimReward: {
    // api: 'claimReward',
    api: 'claim/reward',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  GetOpponents: {
    //api: 'getFriends',
    api: 'friends',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  SendMessage: {
    //api: 'sendMessage',
    api: 'sendmessage',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetMessage: {
    //api: 'getMessages',
    api: 'receivemessage',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetStats: {
    // api: 'getStats',
    api: 'user/stats',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetProfileForClaim: {
    // api: 'getProfile',
    api: 'users/profile',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  GetUserCertificateDetails: {
    // api: 'getProfile',
    api: 'user/certificate/data',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  GetMessageLowPriority: {
    api: 'getMessages',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 0,
  },
  GetCompetitionsActivitiesLowPriority: {
    api: 'competition/activities',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 0,
  },
  GetCompetitionsBlocking: {
    api: 'competition/activities',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: false,
    from: 0,
    priority: 0,
  },
  ChangeGrade: {
    api: 'user/settings/update',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  SocialLogin: {
    api: 'socialLogin',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  BlockFriend: {
    api: 'blockfriend',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  SetGradeAndPoints: {
    api: 'grade/point/set',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetRewardsHistory: {
    api: 'reward/transactions',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetRecommendationsBlocking: {
    api: 'user/lesson/recommendation',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetRecommendations: {
    api: 'user/lesson/recommendation',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetCompetitionDetails: {
    api: 'competition/details',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  AddSecretCode: {
    api: 'users/secretcode',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  AddSecretCodeForGCLC: {
    api: 'add/competition/secretcode',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetSchoolsLeaderboard: {
    api: 'competition/schools/ranking',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  ClaimCertificate: {
    // api: 'claimCertificate',
    api: 'claim/certificate',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },

  SetUserTimeReward: {
    api: 'user/timereward',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  DeleteUserNotification: {
    api: 'notifications/delete',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetUserNotifications: {
    api: 'notifications',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 0,
  },
  GetUserPremiumStatus: {
    api: 'GetUserPremiumStatus',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  ReadUserNotifications: {
    api: 'notifications/read',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  SetUserPayment: {
    api: 'secure/setUserPayment',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  ReadUserNotification: {
    api: 'notifications/read',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetUserTransactions: {
    api: 'GetUserTransactions',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },

  UploadFile: {
    api: 'storage/upload',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    header: { 'Content-Type': 'multipart/form-data' },
    dto: { institution_id: 0, file: 'fileInstance', container_id: '', user_id: 0 },
    uploadProgressRequired: true,
  },

  LoginExternalAD: {
    api: 'LoginExternal/AD',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  PaymentStatus: {
    api: 'user/payment/status',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: { competition_id: 0, grade: 0 },
  },
  ResetAlert: {
    api: 'users/failedalert/reset',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: { competition_id: 0, grade: 0 },
  },
  PaymentSubscription: {
    api: 'competition/subscriptions',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: { competition_id: 0 },
  },
  PaymentProcess: {
    api: 'payment/process',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,

    dto: {
      subscription_id: 0,
      payment_gateway: '',
      amount: 0,
      duration_in_days: 0,
      system_id: 0,
      user_id: 0,
      username: '',
      email: '',
      grade: '',
      payment_mode: '',
      vendor_id: 0,
    },
  },
  InstitutionalInfo: {
    api: 'principal/signup/set/institutional/info',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  InstitutionSubscription: {
    api: 'institution/subscriptions',
    isAuthenticationReq: true,
    dto: {},
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },

  InstitutionalSummary: {
    api: 'competition/summary',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: {
      competition_id: 0,
      grade: 0,
    },
  },
  InstitutionalPlayers: {
    api: 'competition/users/ranking',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: {
      competition_id: 0,
      grade: 0,
    },
  },
  InstitutionalPerformers: {
    api: 'competition/performance/summary',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: {
      competition_id: 0,
      grade: 0,
    },
  },
  InstitutionalReport: {
    api: 'competition/lessons/report',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: {
      competition_id: 0,
      grade: 0,
    },
  },
  InstitutionalGamesReport: {
    api: 'competition/games/report',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: {
      competition_id: 0,
      grade: 0,
    },
  },
  GetAllInstCompetitions: {
    api: 'institution/competitions',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: false,
    from: 0,
    priority: 1,
  },
  GetInstanceConfig: {
    api: 'instance/config',
    isAuthenticationReq: false,
    // setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },

  OTPMobileSend: {
    api: 'user/otp/sms/send',
    isAuthenticationReq: false,
    setSpinner: true,
    setCancelBtn: true,
    //from: 1,
    from: 0,
    priority: 1,
  },
  DpoPayment: {
    api: 'payment/dpo/transaction/create',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: {
      phone_number: 0,
      amount: 0,
      currency: '',
      duration_in_days: 0,
      grade: 0,
      subscription_guid: '',
      redirect_url: '',
      back_url: '',
      vendor_uid: '',
      email: '',
    },
  },
  SafaricomPayment: {
    api: 'payment/safaricom/transaction/create',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  DpoPaymentVerification: {
    api: 'payment/dpo/transaction/verify',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: {
      transaction_token: 0,
    },
  },
  SafaricomPaymentVerification: {
    api: 'payment/safaricom/transaction/details',
    isAuthenticationReq: true,
    setSpinner: false,
    setCancelBtn: true,
    from: 0,
    priority: 1,
  },
  SubscriptionDetails: {
    api: 'user/subscription/details',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: { competition_id: 0 },
  },
  CancelSubscription: {
    api: 'payment/dpo/subscription/cancel',
    isAuthenticationReq: true,
    setSpinner: true,
    setCancelBtn: true,
    from: 0,
    priority: 1,
    dto: { transaction_token: '' },
  },
};

/** ******************** */

export const PrepareApis = () => {
  const keys = Object.keys(API_CALLS);
  for (let i = 0; i < keys.length; i++) {
    API_CALLS[keys[i]].CLEAR = `${keys[i]}_CLEAR`;
    API_CALLS[keys[i]].LOADING = `${keys[i]}_LOADING`;
    API_CALLS[keys[i]].ERROR = `${keys[i]}_ERROR`;
    API_CALLS[keys[i]].SUCCESS = `${keys[i]}_SUCCESS`;
  }
};

export const ApiToKey = (p, v) => {
  const keys = Object.keys(API_CALLS);
  for (let i = 0; i < keys.length; i++) {
    if (v === API_CALLS[keys[i]][p]) return keys[i];
  }
  return null;
};
